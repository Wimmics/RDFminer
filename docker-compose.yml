version: '3.8'
services:
  # RDFminer-core
  rdfminer:
    restart: always
    image: rdfminer-core:${RDFMINER_VERSION}
    hostname: rdfminer
    build:
      context: ./RDFminer-core/.
      args:
        RDFMINER_VERSION: ${RDFMINER_VERSION}
        RDFMINER_SERVER_PORT: ${RDFMINER_SERVER_PORT}
        CORESE_PORT: ${CORESE_PORT}
        HOME: ${RDFMINER_HOME}
    command: launch
    volumes:
      - type: bind
        source: ./IO
        target: /rdfminer/io
  # RDFminer-server

  # RDFminer-front
  front:
    restart: always
    image: rdfminer-front:${RDFMINER_VERSION}
    hostname: front
    build:
      context: ./RDFminer-front/.
      args:
        APP: /app
        RDFMINER_FRONT_PORT: ${RDFMINER_FRONT_PORT}
        RDFMINER_FRONT_ENDPOINT: ${RDFMINER_FRONT_ENDPOINT}
        RDFMINER_FRONT_SOCKET_ENDPOINT: ${RDFMINER_FRONT_SOCKET_ENDPOINT}
    ports:
      - '${RDFMINER_FRONT_PORT}:${RDFMINER_FRONT_PORT}'
    volumes:
      - ./RDFminer-front/:/app/
      - /app/node_modules
  # Corese 
  corese:
    restart: always
    image: corese:${CORESE_VERSION}
    hostname: corese
    build:
      context: ./corese/corese-server/build-docker/corese/.
      args:
        CORESE_VERSION: $CORESE_VERSION
        CORESE_PORT: $CORESE_PORT
        CORESE_STORAGE: $CORESE_STORAGE
    ports:
      - '${CORESE_PORT}:${CORESE_PORT}'
  # MongoDB
  mongo:
    restart: always
    image: mongo:6.0
    hostname: mongo
    ports:
      - '${RDFMINER_SERVER_MONGODB_PORT}:${RDFMINER_SERVER_MONGODB_PORT}'
    volumes:
      - type: bind
        source: ${RDFMINER_SERVER_MONGODB_DATAPATH}/data
        target: /data/db